{"ast":null,"code":"var _jsxFileName = \"/Users/architayadav/RAC_DRDO/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/context/AuthContext.js\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nconst API_URL = 'http://localhost:8000/api/';\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  // We get the initial state by decoding the token from localStorage\n  const [authTokens, setAuthTokens] = useState(() => localStorage.getItem('drdo-authTokens') ? JSON.parse(localStorage.getItem('drdo-authTokens')) : null);\n  const [user, setUser] = useState(() => localStorage.getItem('drdo-authTokens') ? JSON.parse(atob(localStorage.getItem('drdo-authTokens').split('.')[1])) : null);\n  const [isLoading, setIsLoading] = useState(true);\n  const navigate = useNavigate();\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post(API_URL + 'token/', {\n        username: email,\n        password: password\n      });\n      if (response.status === 200) {\n        const data = response.data;\n        setAuthTokens(data);\n\n        // Decode the payload from the access token\n        const decodedUser = JSON.parse(atob(data.access.split('.')[1]));\n        setUser(decodedUser);\n        localStorage.setItem('drdo-authTokens', JSON.stringify(data));\n\n        // --- THIS IS THE CORRECTED LOGIC ---\n        // We now check the 'is_staff' flag from the token itself.\n        if (decodedUser.is_staff) {\n          navigate('/admin-dashboard');\n        } else {\n          // For now, all non-staff are screening members.\n          // Later you can add more specific roles.\n          navigate('/dashboard');\n        }\n      }\n    } catch (error) {\n      console.error(\"Login Error:\", error);\n      alert(\"Something went wrong! Check credentials.\");\n    }\n  };\n  const logout = () => {\n    setAuthTokens(null);\n    setUser(null);\n    localStorage.removeItem('drdo-authTokens');\n    navigate('/login');\n  };\n  useEffect(() => {\n    // This effect now just ensures the app doesn't render while loading\n    setIsLoading(false);\n  }, []);\n  const value = {\n    isAuthenticated: !!user,\n    user,\n    isLoading,\n    login,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: isLoading ? null : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"taTqwqL6LMHmSADl2seKuYJHY2E=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","useNavigate","axios","jsxDEV","_jsxDEV","AuthContext","API_URL","AuthProvider","children","_s","authTokens","setAuthTokens","localStorage","getItem","JSON","parse","user","setUser","atob","split","isLoading","setIsLoading","navigate","login","email","password","response","post","username","status","data","decodedUser","access","setItem","stringify","is_staff","error","console","alert","logout","removeItem","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/Users/architayadav/RAC_DRDO/frontend/src/context/AuthContext.js"],"sourcesContent":["// src/context/AuthContext.js\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\nconst AuthContext = createContext(null);\nconst API_URL = 'http://localhost:8000/api/';\n\nexport const AuthProvider = ({ children }) => {\n    // We get the initial state by decoding the token from localStorage\n    const [authTokens, setAuthTokens] = useState(() => localStorage.getItem('drdo-authTokens') ? JSON.parse(localStorage.getItem('drdo-authTokens')) : null);\n    const [user, setUser] = useState(() => localStorage.getItem('drdo-authTokens') ? JSON.parse(atob(localStorage.getItem('drdo-authTokens').split('.')[1])) : null);\n    const [isLoading, setIsLoading] = useState(true);\n    const navigate = useNavigate();\n\n    const login = async (email, password) => {\n        try {\n            const response = await axios.post(API_URL + 'token/', {\n                username: email,\n                password: password,\n            });\n\n            if (response.status === 200) {\n                const data = response.data;\n                setAuthTokens(data);\n\n                // Decode the payload from the access token\n                const decodedUser = JSON.parse(atob(data.access.split('.')[1]));\n                setUser(decodedUser);\n\n                localStorage.setItem('drdo-authTokens', JSON.stringify(data));\n\n                // --- THIS IS THE CORRECTED LOGIC ---\n                // We now check the 'is_staff' flag from the token itself.\n                if (decodedUser.is_staff) {\n                    navigate('/admin-dashboard');\n                } else {\n                    // For now, all non-staff are screening members.\n                    // Later you can add more specific roles.\n                    navigate('/dashboard');\n                }\n            }\n        } catch (error) {\n            console.error(\"Login Error:\", error);\n            alert(\"Something went wrong! Check credentials.\");\n        }\n    };\n\n    const logout = () => {\n        setAuthTokens(null);\n        setUser(null);\n        localStorage.removeItem('drdo-authTokens');\n        navigate('/login');\n    };\n\n    useEffect(() => {\n        // This effect now just ensures the app doesn't render while loading\n        setIsLoading(false);\n    }, []);\n\n    const value = {\n        isAuthenticated: !!user,\n        user,\n        isLoading,\n        login,\n        logout,\n    };\n\n    return (\n        <AuthContext.Provider value={value}>\n            {isLoading ? null : children}\n        </AuthContext.Provider>\n    );\n};\n\nexport const useAuth = () => {\n    return useContext(AuthContext);\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}