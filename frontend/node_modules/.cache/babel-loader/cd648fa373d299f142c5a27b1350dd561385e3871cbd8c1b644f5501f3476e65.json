{"ast":null,"code":"var _jsxFileName = \"/Users/architayadav/drdo-verification-portal/src/pages/AdminDashboardPage.js\",\n  _s = $RefreshSig$();\n// src/pages/AdminDashboardPage.js\nimport React, { useState, useMemo } from 'react'; // NEW: Import useMemo for performance\nimport './DashboardPage.css';\nimport './AdminDashboard.css';\nimport Modal from '../components/common/Modal';\n\n// Initial mock data - We'll add one more user to make filtering more obvious\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialUsers = [{\n  id: 1,\n  name: 'Rohan Sharma',\n  email: 'rohan.s@email.com',\n  role: 'Screening Member'\n}, {\n  id: 2,\n  name: 'Priya Singh',\n  email: 'priya.s@email.com',\n  role: 'Screening Member'\n}, {\n  id: 3,\n  name: 'Amit Kumar',\n  email: 'amit.k@email.com',\n  role: 'Applicant'\n}, {\n  id: 4,\n  name: 'Archit Yadav',\n  email: 'archit.y@email.com',\n  role: 'Admin'\n}, {\n  id: 5,\n  name: 'Rushan Shaikh',\n  email: 'stanley_1337@meta.org.in',\n  role: 'Admin'\n}];\nconst initialRoles = ['Admin', 'Screening Member', 'Applicant'];\nconst AdminDashboardPage = () => {\n  _s();\n  const [users, setUsers] = useState(initialUsers);\n  const [roles, setRoles] = useState(initialRoles);\n  const [isAssignModalOpen, setAssignModalOpen] = useState(false);\n  const [isAddRoleModalOpen, setAddRoleModalOpen] = useState(false);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [newRoleName, setNewRoleName] = useState('');\n\n  // --- NEW: State for search and filter controls ---\n  const [searchQuery, setSearchQuery] = useState('');\n  const [roleFilter, setRoleFilter] = useState('All');\n\n  // --- NEW: Memoized calculation to filter users based on search and role selection ---\n  // This recalculates only when its dependencies (users, searchQuery, roleFilter) change.\n  const filteredUsers = useMemo(() => {\n    return users.filter(user => {\n      const matchesRole = roleFilter === 'All' || user.role === roleFilter;\n      const matchesSearch = user.email.toLowerCase().includes(searchQuery.toLowerCase());\n      return matchesRole && matchesSearch;\n    });\n  }, [users, searchQuery, roleFilter]);\n  const handleOpenAssignModal = user => {\n    setSelectedUser(user);\n    setAssignModalOpen(true);\n  };\n  const handleAssignRole = newRole => {\n    setUsers(users.map(user => user.id === selectedUser.id ? {\n      ...user,\n      role: newRole\n    } : user));\n    setAssignModalOpen(false);\n  };\n  const handleOpenAddRoleModal = () => {\n    setNewRoleName('');\n    setAddRoleModalOpen(true);\n  };\n  const handleAddNewRole = () => {\n    if (newRoleName && !roles.includes(newRoleName)) {\n      setRoles([...roles, newRoleName]);\n      setAddRoleModalOpen(false);\n    } else {\n      alert('Please enter a valid, unique role name.');\n    }\n  };\n  const getRoleClass = role => {\n    const roleKey = role.split(' ')[0].toLowerCase();\n    const validRoles = ['admin', 'screening', 'applicant'];\n    return validRoles.includes(roleKey) ? `role-${roleKey}` : 'role-default';\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"dashboard-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Admin Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"RAC Portal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"dashboard-main\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"admin-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"User Management\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"View and manage user roles within the system.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"controls-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Search by user email...\",\n              className: \"search-input\",\n              value: searchQuery,\n              onChange: e => setSearchQuery(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"filter-select\",\n              value: roleFilter,\n              onChange: e => setRoleFilter(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"All\",\n                children: \"All Roles\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 33\n              }, this), roles.map(role => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: role,\n                children: role\n              }, role, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"user-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Current Role\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Action\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: filteredUsers.length > 0 ? filteredUsers.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: user.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: user.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `role-pill ${getRoleClass(user.role)}`,\n                    children: user.role\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"action-button\",\n                    onClick: () => handleOpenAssignModal(user),\n                    children: \"Assign Role\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 41\n                }, this)]\n              }, user.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 37\n              }, this)) :\n              /*#__PURE__*/\n              // --- NEW: A helpful message to show when no users match the criteria ---\n              _jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  colSpan: \"4\",\n                  style: {\n                    textAlign: 'center',\n                    padding: '2rem',\n                    color: '#6a737d'\n                  },\n                  children: \"No users found matching your criteria.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"admin-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Role Management\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Define new roles and their permissions.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"create-role-button\",\n            onClick: handleOpenAddRoleModal,\n            children: \"+ Add New Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Assign Role\",\n      isOpen: isAssignModalOpen,\n      onClose: () => setAssignModalOpen(false),\n      children: selectedUser && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Assign a new role to \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: selectedUser.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 49\n          }, this), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-group\",\n          style: {\n            width: '100%',\n            padding: '0.8rem',\n            border: '1px solid #dcdfe6',\n            borderRadius: '6px'\n          },\n          defaultValue: selectedUser.role,\n          onChange: e => handleAssignRole(e.target.value),\n          children: roles.map(role => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: role,\n            children: role\n          }, role, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 48\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Add New Role\",\n      isOpen: isAddRoleModalOpen,\n      onClose: () => setAddRoleModalOpen(false),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"newRole\",\n          children: \"Role Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"newRole\",\n          value: newRoleName,\n          onChange: e => setNewRoleName(e.target.value),\n          placeholder: \"e.g., Document Verifier\",\n          style: {\n            width: '100%',\n            padding: '0.8rem',\n            border: '1px solid #dcdfe6',\n            borderRadius: '6px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"form-button\",\n        onClick: handleAddNewRole,\n        children: \"Create Role\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(AdminDashboardPage, \"iF4aEvmYFFTjDDZ4ccs77xjCdgg=\");\n_c = AdminDashboardPage;\nexport default AdminDashboardPage;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboardPage\");","map":{"version":3,"names":["React","useState","useMemo","Modal","jsxDEV","_jsxDEV","Fragment","_Fragment","initialUsers","id","name","email","role","initialRoles","AdminDashboardPage","_s","users","setUsers","roles","setRoles","isAssignModalOpen","setAssignModalOpen","isAddRoleModalOpen","setAddRoleModalOpen","selectedUser","setSelectedUser","newRoleName","setNewRoleName","searchQuery","setSearchQuery","roleFilter","setRoleFilter","filteredUsers","filter","user","matchesRole","matchesSearch","toLowerCase","includes","handleOpenAssignModal","handleAssignRole","newRole","map","handleOpenAddRoleModal","handleAddNewRole","alert","getRoleClass","roleKey","split","validRoles","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","length","onClick","colSpan","style","textAlign","padding","color","title","isOpen","onClose","width","border","borderRadius","defaultValue","htmlFor","_c","$RefreshReg$"],"sources":["/Users/architayadav/drdo-verification-portal/src/pages/AdminDashboardPage.js"],"sourcesContent":["// src/pages/AdminDashboardPage.js\nimport React, { useState, useMemo } from 'react'; // NEW: Import useMemo for performance\nimport './DashboardPage.css';\nimport './AdminDashboard.css';\nimport Modal from '../components/common/Modal';\n\n// Initial mock data - We'll add one more user to make filtering more obvious\nconst initialUsers = [\n    { id: 1, name: 'Rohan Sharma', email: 'rohan.s@email.com', role: 'Screening Member' },\n    { id: 2, name: 'Priya Singh', email: 'priya.s@email.com', role: 'Screening Member' },\n    { id: 3, name: 'Amit Kumar', email: 'amit.k@email.com', role: 'Applicant' },\n    { id: 4, name: 'Archit Yadav', email: 'archit.y@email.com', role: 'Admin' },\n    { id: 5, name: 'Rushan Shaikh', email: 'stanley_1337@meta.org.in', role: 'Admin' },\n];\nconst initialRoles = ['Admin', 'Screening Member', 'Applicant'];\n\nconst AdminDashboardPage = () => {\n    const [users, setUsers] = useState(initialUsers);\n    const [roles, setRoles] = useState(initialRoles);\n    const [isAssignModalOpen, setAssignModalOpen] = useState(false);\n    const [isAddRoleModalOpen, setAddRoleModalOpen] = useState(false);\n    const [selectedUser, setSelectedUser] = useState(null);\n    const [newRoleName, setNewRoleName] = useState('');\n\n    // --- NEW: State for search and filter controls ---\n    const [searchQuery, setSearchQuery] = useState('');\n    const [roleFilter, setRoleFilter] = useState('All');\n\n    // --- NEW: Memoized calculation to filter users based on search and role selection ---\n    // This recalculates only when its dependencies (users, searchQuery, roleFilter) change.\n    const filteredUsers = useMemo(() => {\n        return users.filter(user => {\n            const matchesRole = roleFilter === 'All' || user.role === roleFilter;\n            const matchesSearch = user.email.toLowerCase().includes(searchQuery.toLowerCase());\n            return matchesRole && matchesSearch;\n        });\n    }, [users, searchQuery, roleFilter]);\n\n\n    const handleOpenAssignModal = (user) => {\n        setSelectedUser(user);\n        setAssignModalOpen(true);\n    };\n\n    const handleAssignRole = (newRole) => {\n        setUsers(users.map(user =>\n            user.id === selectedUser.id ? { ...user, role: newRole } : user\n        ));\n        setAssignModalOpen(false);\n    };\n\n    const handleOpenAddRoleModal = () => {\n        setNewRoleName('');\n        setAddRoleModalOpen(true);\n    };\n\n    const handleAddNewRole = () => {\n        if (newRoleName && !roles.includes(newRoleName)) {\n            setRoles([...roles, newRoleName]);\n            setAddRoleModalOpen(false);\n        } else {\n            alert('Please enter a valid, unique role name.');\n        }\n    };\n\n    const getRoleClass = (role) => {\n        const roleKey = role.split(' ')[0].toLowerCase();\n        const validRoles = ['admin', 'screening', 'applicant'];\n        return validRoles.includes(roleKey) ? `role-${roleKey}` : 'role-default';\n    }\n\n    return (\n        <>\n            <div className=\"dashboard-container\">\n                <header className=\"dashboard-header\">\n                    <h1>Admin Dashboard</h1>\n                    <span>RAC Portal</span>\n                </header>\n                <main className=\"dashboard-main\">\n                    <div className=\"admin-card\">\n                        <h3>User Management</h3>\n                        <p>View and manage user roles within the system.</p>\n\n                        {/* --- NEW: Search and Filter Controls Section --- */}\n                        <div className=\"controls-container\">\n                            <input\n                                type=\"text\"\n                                placeholder=\"Search by user email...\"\n                                className=\"search-input\"\n                                value={searchQuery}\n                                onChange={(e) => setSearchQuery(e.target.value)}\n                            />\n                            <select\n                                className=\"filter-select\"\n                                value={roleFilter}\n                                onChange={(e) => setRoleFilter(e.target.value)}\n                            >\n                                <option value=\"All\">All Roles</option>\n                                {roles.map(role => (\n                                    <option key={role} value={role}>{role}</option>\n                                ))}\n                            </select>\n                        </div>\n\n                        <table className=\"user-table\">\n                            <thead>\n                            <tr>\n                                <th>Name</th>\n                                <th>Email</th>\n                                <th>Current Role</th>\n                                <th>Action</th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            {/* --- NEW: We now map over 'filteredUsers' instead of the full 'users' list --- */}\n                            {filteredUsers.length > 0 ? (\n                                filteredUsers.map(user => (\n                                    <tr key={user.id}>\n                                        <td>{user.name}</td>\n                                        <td>{user.email}</td>\n                                        <td><span className={`role-pill ${getRoleClass(user.role)}`}>{user.role}</span></td>\n                                        <td><button className=\"action-button\" onClick={() => handleOpenAssignModal(user)}>Assign Role</button></td>\n                                    </tr>\n                                ))\n                            ) : (\n                                // --- NEW: A helpful message to show when no users match the criteria ---\n                                <tr>\n                                    <td colSpan=\"4\" style={{ textAlign: 'center', padding: '2rem', color: '#6a737d' }}>\n                                        No users found matching your criteria.\n                                    </td>\n                                </tr>\n                            )}\n                            </tbody>\n                        </table>\n                    </div>\n                    <div className=\"admin-card\">\n                        <h3>Role Management</h3>\n                        <p>Define new roles and their permissions.</p>\n                        <button className=\"create-role-button\" onClick={handleOpenAddRoleModal}>+ Add New Role</button>\n                    </div>\n                </main>\n            </div>\n\n            {/* --- Modals (No changes needed here) --- */}\n            <Modal title=\"Assign Role\" isOpen={isAssignModalOpen} onClose={() => setAssignModalOpen(false)}>\n                {selectedUser && (\n                    <div>\n                        <p>Assign a new role to <strong>{selectedUser.name}</strong>.</p>\n                        <select\n                            className=\"form-group\"\n                            style={{ width: '100%', padding: '0.8rem', border: '1px solid #dcdfe6', borderRadius: '6px' }}\n                            defaultValue={selectedUser.role}\n                            onChange={(e) => handleAssignRole(e.target.value)}\n                        >\n                            {roles.map(role => <option key={role} value={role}>{role}</option>)}\n                        </select>\n                    </div>\n                )}\n            </Modal>\n            <Modal title=\"Add New Role\" isOpen={isAddRoleModalOpen} onClose={() => setAddRoleModalOpen(false)}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"newRole\">Role Name</label>\n                    <input\n                        type=\"text\"\n                        id=\"newRole\"\n                        value={newRoleName}\n                        onChange={(e) => setNewRoleName(e.target.value)}\n                        placeholder=\"e.g., Document Verifier\"\n                        style={{ width: '100%', padding: '0.8rem', border: '1px solid #dcdfe6', borderRadius: '6px' }}\n                    />\n                </div>\n                <button className=\"form-button\" onClick={handleAddNewRole}>Create Role</button>\n            </Modal>\n        </>\n    );\n};\n\nexport default AdminDashboardPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}