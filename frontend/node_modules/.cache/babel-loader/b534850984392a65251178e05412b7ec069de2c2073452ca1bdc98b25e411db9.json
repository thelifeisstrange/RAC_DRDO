{"ast":null,"code":"var _jsxFileName = \"/Users/architayadav/RAC_DRDO/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/context/AuthContext.js\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const navigate = useNavigate();\n\n  // Check for a logged-in user in localStorage when the app first loads\n  useEffect(() => {\n    const storedUser = localStorage.getItem('drdo-user');\n    if (storedUser) {\n      setUser(JSON.parse(storedUser));\n    }\n  }, []);\n\n  // The login function\n  const login = userData => {\n    // Store user data in both state and localStorage\n    setUser(userData);\n    localStorage.setItem('drdo-user', JSON.stringify(userData));\n\n    // Navigate to the correct dashboard after successful login\n    switch (userData.role) {\n      case 'Admin':\n        navigate('/admin-dashboard');\n        break;\n      case 'Screening Member':\n        navigate('/dashboard');\n        break;\n      case 'Applicant':\n        navigate('/applicant-dashboard');\n        break;\n      default:\n        navigate('/login');\n    }\n  };\n\n  // The logout function\n  const logout = () => {\n    // Clear user data from both state and localStorage\n    setUser(null);\n    localStorage.removeItem('drdo-user');\n    navigate('/login'); // Redirect to login page\n  };\n\n  // The value provided to all consuming components\n  const value = {\n    isAuthenticated: !!user,\n    user,\n    login,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n// A custom hook to make it easy to use the auth context in other components\n_s(AuthProvider, \"/48TlfV0adSMEvsbW2gk5sMeopI=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","useNavigate","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","navigate","storedUser","localStorage","getItem","JSON","parse","login","userData","setItem","stringify","role","logout","removeItem","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/Users/architayadav/RAC_DRDO/frontend/src/context/AuthContext.js"],"sourcesContent":["// src/context/AuthContext.js\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst AuthContext = createContext(null);\n\nexport const AuthProvider = ({ children }) => {\n    const [user, setUser] = useState(null);\n    const navigate = useNavigate();\n\n    // Check for a logged-in user in localStorage when the app first loads\n    useEffect(() => {\n        const storedUser = localStorage.getItem('drdo-user');\n        if (storedUser) {\n            setUser(JSON.parse(storedUser));\n        }\n    }, []);\n\n    // The login function\n    const login = (userData) => {\n        // Store user data in both state and localStorage\n        setUser(userData);\n        localStorage.setItem('drdo-user', JSON.stringify(userData));\n\n        // Navigate to the correct dashboard after successful login\n        switch (userData.role) {\n            case 'Admin':\n                navigate('/admin-dashboard');\n                break;\n            case 'Screening Member':\n                navigate('/dashboard');\n                break;\n            case 'Applicant':\n                navigate('/applicant-dashboard');\n                break;\n            default:\n                navigate('/login');\n        }\n    };\n\n    // The logout function\n    const logout = () => {\n        // Clear user data from both state and localStorage\n        setUser(null);\n        localStorage.removeItem('drdo-user');\n        navigate('/login'); // Redirect to login page\n    };\n\n    // The value provided to all consuming components\n    const value = {\n        isAuthenticated: !!user,\n        user,\n        login,\n        logout,\n    };\n\n    return (\n        <AuthContext.Provider value={value}>\n            {children}\n        </AuthContext.Provider>\n    );\n};\n\n// A custom hook to make it easy to use the auth context in other components\nexport const useAuth = () => {\n    return useContext(AuthContext);\n};"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,WAAW,gBAAGP,aAAa,CAAC,IAAI,CAAC;AAEvC,OAAO,MAAMQ,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAMY,QAAQ,GAAGT,WAAW,CAAC,CAAC;;EAE9B;EACAD,SAAS,CAAC,MAAM;IACZ,MAAMW,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IACpD,IAAIF,UAAU,EAAE;MACZF,OAAO,CAACK,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,CAAC;IACnC;EACJ,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMK,KAAK,GAAIC,QAAQ,IAAK;IACxB;IACAR,OAAO,CAACQ,QAAQ,CAAC;IACjBL,YAAY,CAACM,OAAO,CAAC,WAAW,EAAEJ,IAAI,CAACK,SAAS,CAACF,QAAQ,CAAC,CAAC;;IAE3D;IACA,QAAQA,QAAQ,CAACG,IAAI;MACjB,KAAK,OAAO;QACRV,QAAQ,CAAC,kBAAkB,CAAC;QAC5B;MACJ,KAAK,kBAAkB;QACnBA,QAAQ,CAAC,YAAY,CAAC;QACtB;MACJ,KAAK,WAAW;QACZA,QAAQ,CAAC,sBAAsB,CAAC;QAChC;MACJ;QACIA,QAAQ,CAAC,QAAQ,CAAC;IAC1B;EACJ,CAAC;;EAED;EACA,MAAMW,MAAM,GAAGA,CAAA,KAAM;IACjB;IACAZ,OAAO,CAAC,IAAI,CAAC;IACbG,YAAY,CAACU,UAAU,CAAC,WAAW,CAAC;IACpCZ,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;EACxB,CAAC;;EAED;EACA,MAAMa,KAAK,GAAG;IACVC,eAAe,EAAE,CAAC,CAAChB,IAAI;IACvBA,IAAI;IACJQ,KAAK;IACLK;EACJ,CAAC;EAED,oBACIlB,OAAA,CAACC,WAAW,CAACqB,QAAQ;IAACF,KAAK,EAAEA,KAAM;IAAAjB,QAAA,EAC9BA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;;AAED;AAAAtB,EAAA,CAzDaF,YAAY;EAAA,QAEJJ,WAAW;AAAA;AAAA6B,EAAA,GAFnBzB,YAAY;AA0DzB,OAAO,MAAM0B,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACzB,OAAOjC,UAAU,CAACK,WAAW,CAAC;AAClC,CAAC;AAAC4B,GAAA,CAFWD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}