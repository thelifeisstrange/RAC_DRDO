{"ast":null,"code":"var _jsxFileName = \"/Users/architayadav/RAC_DRDO/frontend/src/components/dashboard/ResultsTable.js\";\n// src/components/dashboard/ResultsTable.js\nimport React from 'react';\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResultsTable = ({\n  data\n}) => {\n  const getStatusClass = status => {\n    if (status === 'Mismatch') return 'status-mismatch';\n    if (status === 'Match') return 'status-match';\n    if (status === 'Pending') return 'status-pending';\n    return '';\n  };\n\n  // NEW: A message to show when the filter returns no results\n  if (!data || data.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: 'center',\n        padding: '2rem',\n        color: '#6a737d'\n      },\n      children: \"No applications found for the selected job role.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-container\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Applicant Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Job Applied For\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Document Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Data from CSV\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Extracted from Document\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map(row => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.applicantName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.jobAppliedFor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.documentType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.csvData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.extractedData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `status-pill ${getStatusClass(row.status)}`,\n              children: row.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this)]\n        }, row.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n_c = ResultsTable;\nexport default ResultsTable;\nvar _c;\n$RefreshReg$(_c, \"ResultsTable\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ResultsTable","data","getStatusClass","status","length","style","textAlign","padding","color","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","row","applicantName","jobAppliedFor","documentType","csvData","extractedData","id","_c","$RefreshReg$"],"sources":["/Users/architayadav/RAC_DRDO/frontend/src/components/dashboard/ResultsTable.js"],"sourcesContent":["// src/components/dashboard/ResultsTable.js\nimport React from 'react';\nimport './Dashboard.css';\n\nconst ResultsTable = ({ data }) => {\n    const getStatusClass = (status) => {\n        if (status === 'Mismatch') return 'status-mismatch';\n        if (status === 'Match') return 'status-match';\n        if (status === 'Pending') return 'status-pending';\n        return '';\n    };\n\n    // NEW: A message to show when the filter returns no results\n    if (!data || data.length === 0) {\n        return <p style={{ textAlign: 'center', padding: '2rem', color: '#6a737d' }}>No applications found for the selected job role.</p>;\n    }\n\n    return (\n        <div className=\"table-container\">\n            <table>\n                <thead>\n                <tr>\n                    <th>Applicant Name</th>\n                    {/* --- NEW: Table Header for Job Role --- */}\n                    <th>Job Applied For</th>\n                    <th>Document Type</th>\n                    <th>Data from CSV</th>\n                    <th>Extracted from Document</th>\n                    <th>Status</th>\n                </tr>\n                </thead>\n                <tbody>\n                {data.map((row) => (\n                    <tr key={row.id}>\n                        <td>{row.applicantName}</td>\n                        {/* --- NEW: Table Data cell for Job Role --- */}\n                        <td>{row.jobAppliedFor}</td>\n                        <td>{row.documentType}</td>\n                        <td>{row.csvData}</td>\n                        <td>{row.extractedData}</td>\n                        <td>\n                <span className={`status-pill ${getStatusClass(row.status)}`}>\n                  {row.status}\n                </span>\n                        </td>\n                    </tr>\n                ))}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nexport default ResultsTable;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}