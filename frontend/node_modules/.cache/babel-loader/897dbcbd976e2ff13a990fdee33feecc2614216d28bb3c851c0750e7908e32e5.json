{"ast":null,"code":"var _jsxFileName = \"/Users/architayadav/RAC_DRDO/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/context/AuthContext.js\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nconst API_URL = 'http://localhost:8000/api/';\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(() => {\n    const token = localStorage.getItem('drdo-authTokens');\n    return token ? JSON.parse(atob(token.split('.')[1])) : null;\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  const navigate = useNavigate();\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post(API_URL + 'token/', {\n        username: email,\n        password: password\n      });\n      if (response.status === 200) {\n        const data = response.data;\n        const decodedUser = JSON.parse(atob(data.access.split('.')[1]));\n        setUser(decodedUser);\n        localStorage.setItem('drdo-authTokens', JSON.stringify(data));\n\n        // --- THIS IS THE FINAL, ROBUST NAVIGATION LOGIC ---\n        // We read the role directly from the token payload.\n        switch (decodedUser.role) {\n          case 'ADMIN':\n            navigate('/admin-dashboard');\n            break;\n          case 'SCREENING_MEMBER':\n            navigate('/dashboard');\n            break;\n          case 'APPLICANT':\n            navigate('/applicant-dashboard');\n            break;\n          default:\n            navigate('/login');\n        }\n      }\n    } catch (error) {\n      console.error(\"Login Error:\", error);\n      alert(\"Something went wrong! Check credentials.\");\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('drdo-authTokens');\n    navigate('/login');\n  };\n  useEffect(() => {\n    setIsLoading(false);\n  }, []);\n  const value = {\n    isAuthenticated: !!user,\n    user,\n    isLoading,\n    login,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: isLoading ? null : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"axTVsyjp1s2F1h+4BTAWJ2rcDtk=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","useNavigate","axios","jsxDEV","_jsxDEV","AuthContext","API_URL","AuthProvider","children","_s","user","setUser","token","localStorage","getItem","JSON","parse","atob","split","isLoading","setIsLoading","navigate","login","email","password","response","post","username","status","data","decodedUser","access","setItem","stringify","role","error","console","alert","logout","removeItem","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/Users/architayadav/RAC_DRDO/frontend/src/context/AuthContext.js"],"sourcesContent":["// src/context/AuthContext.js\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\nconst AuthContext = createContext(null);\nconst API_URL = 'http://localhost:8000/api/';\n\nexport const AuthProvider = ({ children }) => {\n    const [user, setUser] = useState(() => {\n        const token = localStorage.getItem('drdo-authTokens');\n        return token ? JSON.parse(atob(token.split('.')[1])) : null;\n    });\n    const [isLoading, setIsLoading] = useState(true);\n    const navigate = useNavigate();\n\n    const login = async (email, password) => {\n        try {\n            const response = await axios.post(API_URL + 'token/', {\n                username: email,\n                password: password,\n            });\n\n            if (response.status === 200) {\n                const data = response.data;\n                const decodedUser = JSON.parse(atob(data.access.split('.')[1]));\n\n                setUser(decodedUser);\n                localStorage.setItem('drdo-authTokens', JSON.stringify(data));\n\n                // --- THIS IS THE FINAL, ROBUST NAVIGATION LOGIC ---\n                // We read the role directly from the token payload.\n                switch (decodedUser.role) {\n                    case 'ADMIN':\n                        navigate('/admin-dashboard');\n                        break;\n                    case 'SCREENING_MEMBER':\n                        navigate('/dashboard');\n                        break;\n                    case 'APPLICANT':\n                        navigate('/applicant-dashboard');\n                        break;\n                    default:\n                        navigate('/login');\n                }\n            }\n        } catch (error) {\n            console.error(\"Login Error:\", error);\n            alert(\"Something went wrong! Check credentials.\");\n        }\n    };\n\n    const logout = () => {\n        setUser(null);\n        localStorage.removeItem('drdo-authTokens');\n        navigate('/login');\n    };\n\n    useEffect(() => {\n        setIsLoading(false);\n    }, []);\n\n    const value = {\n        isAuthenticated: !!user,\n        user,\n        isLoading,\n        login,\n        logout,\n    };\n\n    return (\n        <AuthContext.Provider value={value}>\n            {isLoading ? null : children}\n        </AuthContext.Provider>\n    );\n};\n\nexport const useAuth = () => {\n    return useContext(AuthContext);\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}