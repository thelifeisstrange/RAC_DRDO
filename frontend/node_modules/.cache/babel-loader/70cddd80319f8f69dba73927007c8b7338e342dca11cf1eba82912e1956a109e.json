{"ast":null,"code":"var _jsxFileName = \"/Users/architayadav/RAC_DRDO/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/context/AuthContext.js\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  // NEW: Add a loading state. It starts as true.\n  const [isLoading, setIsLoading] = useState(true);\n  const navigate = useNavigate();\n\n  // This useEffect will now also manage the loading state.\n  useEffect(() => {\n    try {\n      const storedUser = localStorage.getItem('drdo-user');\n      if (storedUser) {\n        setUser(JSON.parse(storedUser));\n      }\n    } catch (error) {\n      console.error(\"Failed to parse user from localStorage\", error);\n      // If data is corrupted, clear it.\n      localStorage.removeItem('drdo-user');\n    } finally {\n      // CRUCIAL: Set loading to false after we've checked localStorage,\n      // regardless of whether a user was found or not.\n      setIsLoading(false);\n    }\n  }, []);\n  const login = userData => {\n    setUser(userData);\n    localStorage.setItem('drdo-user', JSON.stringify(userData));\n    switch (userData.role) {\n      case 'Admin':\n        navigate('/admin-dashboard');\n        break;\n      case 'Screening Member':\n        navigate('/dashboard');\n        break;\n      case 'Applicant':\n        navigate('/applicant-dashboard');\n        break;\n      default:\n        navigate('/login');\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('drdo-user');\n    navigate('/login');\n  };\n\n  // UPDATED: Provide the isLoading state to the rest of the app.\n  const value = {\n    isAuthenticated: !!user,\n    user,\n    isLoading,\n    login,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"o5QfC7aYrUkj9YQ0lGSakMfCddo=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","useNavigate","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","isLoading","setIsLoading","navigate","storedUser","localStorage","getItem","JSON","parse","error","console","removeItem","login","userData","setItem","stringify","role","logout","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/Users/architayadav/RAC_DRDO/frontend/src/context/AuthContext.js"],"sourcesContent":["// src/context/AuthContext.js\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst AuthContext = createContext(null);\n\nexport const AuthProvider = ({ children }) => {\n    const [user, setUser] = useState(null);\n    // NEW: Add a loading state. It starts as true.\n    const [isLoading, setIsLoading] = useState(true);\n    const navigate = useNavigate();\n\n    // This useEffect will now also manage the loading state.\n    useEffect(() => {\n        try {\n            const storedUser = localStorage.getItem('drdo-user');\n            if (storedUser) {\n                setUser(JSON.parse(storedUser));\n            }\n        } catch (error) {\n            console.error(\"Failed to parse user from localStorage\", error);\n            // If data is corrupted, clear it.\n            localStorage.removeItem('drdo-user');\n        } finally {\n            // CRUCIAL: Set loading to false after we've checked localStorage,\n            // regardless of whether a user was found or not.\n            setIsLoading(false);\n        }\n    }, []);\n\n    const login = (userData) => {\n        setUser(userData);\n        localStorage.setItem('drdo-user', JSON.stringify(userData));\n        switch (userData.role) {\n            case 'Admin': navigate('/admin-dashboard'); break;\n            case 'Screening Member': navigate('/dashboard'); break;\n            case 'Applicant': navigate('/applicant-dashboard'); break;\n            default: navigate('/login');\n        }\n    };\n\n    const logout = () => {\n        setUser(null);\n        localStorage.removeItem('drdo-user');\n        navigate('/login');\n    };\n\n    // UPDATED: Provide the isLoading state to the rest of the app.\n    const value = {\n        isAuthenticated: !!user,\n        user,\n        isLoading,\n        login,\n        logout,\n    };\n\n    return (\n        <AuthContext.Provider value={value}>\n            {children}\n        </AuthContext.Provider>\n    );\n};\n\nexport const useAuth = () => {\n    return useContext(AuthContext);\n};"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,WAAW,gBAAGP,aAAa,CAAC,IAAI,CAAC;AAEvC,OAAO,MAAMQ,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACtC;EACA,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAMc,QAAQ,GAAGX,WAAW,CAAC,CAAC;;EAE9B;EACAD,SAAS,CAAC,MAAM;IACZ,IAAI;MACA,MAAMa,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MACpD,IAAIF,UAAU,EAAE;QACZJ,OAAO,CAACO,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,CAAC;MACnC;IACJ,CAAC,CAAC,OAAOK,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;MAC9D;MACAJ,YAAY,CAACM,UAAU,CAAC,WAAW,CAAC;IACxC,CAAC,SAAS;MACN;MACA;MACAT,YAAY,CAAC,KAAK,CAAC;IACvB;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMU,KAAK,GAAIC,QAAQ,IAAK;IACxBb,OAAO,CAACa,QAAQ,CAAC;IACjBR,YAAY,CAACS,OAAO,CAAC,WAAW,EAAEP,IAAI,CAACQ,SAAS,CAACF,QAAQ,CAAC,CAAC;IAC3D,QAAQA,QAAQ,CAACG,IAAI;MACjB,KAAK,OAAO;QAAEb,QAAQ,CAAC,kBAAkB,CAAC;QAAE;MAC5C,KAAK,kBAAkB;QAAEA,QAAQ,CAAC,YAAY,CAAC;QAAE;MACjD,KAAK,WAAW;QAAEA,QAAQ,CAAC,sBAAsB,CAAC;QAAE;MACpD;QAASA,QAAQ,CAAC,QAAQ,CAAC;IAC/B;EACJ,CAAC;EAED,MAAMc,MAAM,GAAGA,CAAA,KAAM;IACjBjB,OAAO,CAAC,IAAI,CAAC;IACbK,YAAY,CAACM,UAAU,CAAC,WAAW,CAAC;IACpCR,QAAQ,CAAC,QAAQ,CAAC;EACtB,CAAC;;EAED;EACA,MAAMe,KAAK,GAAG;IACVC,eAAe,EAAE,CAAC,CAACpB,IAAI;IACvBA,IAAI;IACJE,SAAS;IACTW,KAAK;IACLK;EACJ,CAAC;EAED,oBACIvB,OAAA,CAACC,WAAW,CAACyB,QAAQ;IAACF,KAAK,EAAEA,KAAM;IAAArB,QAAA,EAC9BA;EAAQ;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAAC1B,EAAA,CAvDWF,YAAY;EAAA,QAIJJ,WAAW;AAAA;AAAAiC,EAAA,GAJnB7B,YAAY;AAyDzB,OAAO,MAAM8B,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACzB,OAAOrC,UAAU,CAACK,WAAW,CAAC;AAClC,CAAC;AAACgC,GAAA,CAFWD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}